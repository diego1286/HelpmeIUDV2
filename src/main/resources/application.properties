
server.port=8092
server.servlet.context-path=/api/v2
#corre en local en localhost:8092/api/v2

spring.jpa.database=MYSQL
spring.jpa.show.sql=true
#se expecifia a que motor se va a conectar  con spring jpa

spring.datasource.url=jdbc:mysql://localhost:3306/helpme_iud?serverTimezone=America/Bogota
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=


#jpa: API de persistencia de Java
#orm: Object relational mapping
#spring.batch.jdbc.initialize-schema=always
spring.sql.init.mode=always


spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
#se conecta con hibernate y el dialecto
spring.jpa.hibernate.ddl-auto=create-drop
#con hibernate ddl-auto se crea las entidades del mapeo en las tablas de bd, create-drop crea y elimina cada vez que se corra no es recomendable en produccion
loggin.level.org.hibernate.SQL=INFO
#informa los errores que se presentan en la creaacion de las entidades  por consola
loggin.level.org.springframework.web=INFO

#me muestra por consola la creacion de las tablas
spring.jpa.show-sql=true
#formatea el codigo sql que se muestra por consola
spring.jpa.properties.hibernate.format_sql=true

#data.sql    para crear el population y schema.sql para crear tablas deberian estar habilitadas para hacerlo en caso que se necesit

